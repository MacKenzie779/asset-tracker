name: windows-release

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:
  build-windows:
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: (Windows) Install NSIS for bundling
        run: choco install nsis -y

      # âžœ Add NSIS to PATH for this job (covers common install locations)
      - name: Add NSIS to PATH
        shell: pwsh
        run: |
          foreach ($p in @(
            'C:\Program Files (x86)\NSIS\Bin',
            'C:\Program Files\NSIS\Bin',
            'C:\ProgramData\chocolatey\bin'
          )) {
            if (Test-Path $p) { echo $p >> $env:GITHUB_PATH }
          }

      # Quick sanity check
      - name: Verify NSIS
        shell: pwsh
        run: |
          $cmd = Get-Command makensis -ErrorAction SilentlyContinue
          if (-not $cmd) { throw "NSIS (makensis) not on PATH" }
          makensis -VERSION

      - name: Install frontend deps
        run: npm ci

      - name: Generate Tauri icons (if missing)
        shell: pwsh
        run: |
          if (!(Test-Path 'src-tauri\icons\icon.ico')) {
            npx --yes "@tauri-apps/cli@^1" icon "src-tauri/icons/app-icon.png"
          }

      - name: Build frontend
        run: npm run build

      # Force predictable output under ./target
      - name: Tauri build (NSIS)
        env:
          CARGO_TARGET_DIR: target
        run: npm run tauri:build -- --bundles nsis -v

      - name: Preview bundle dir
        shell: pwsh
        run: |
          foreach ($d in @('target\release\bundle','src-tauri\target\release\bundle')) {
            Write-Host "`n== $d =="
            if (Test-Path $d) { Get-ChildItem -Recurse $d | Format-Table Length, FullName }
            else { Write-Host "$d does not exist" }
          }

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-bundles
          path: |
            **/bundle/nsis/*-setup.exe
            **/bundle/nsis/*.nsis.zip
          if-no-files-found: error

      # Optional: also upload the raw exe if bundling ever gets skipped
      - name: Upload raw exe (fallback)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: windows-raw-exe
          path: |
            target/release/*.exe
            src-tauri/target/release/*.exe
          if-no-files-found: warn
