name: windows-release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Install NSIS
        run: choco install nsis -y

      - name: Add NSIS to PATH
        shell: pwsh
        run: |
          foreach ($p in @(
            'C:\Program Files (x86)\NSIS\Bin',
            'C:\Program Files\NSIS\Bin',
            'C:\ProgramData\chocolatey\bin'
          )) { if (Test-Path $p) { echo $p >> $env:GITHUB_PATH } }

      - name: Verify NSIS
        shell: pwsh
        run: |
          $cmd = Get-Command makensis -ErrorAction SilentlyContinue
          if (-not $cmd) { throw "NSIS (makensis) not on PATH" }
          makensis -VERSION

      - name: Install frontend deps
        run: npm ci

      - name: Generate Tauri icons (if missing)
        shell: pwsh
        run: |
          if (!(Test-Path 'src-tauri\icons\icon.ico')) {
            npx --yes "@tauri-apps/cli@^1" icon "src-tauri/icons/app-icon.png"
          }

      - name: Build frontend
        run: npm run build

      - name: Tauri build (NSIS)
        env:
          CARGO_TARGET_DIR: target       # predictable output path
        run: npx tauri build --bundles nsis -v

      - name: Preview bundle dir (debug)
        shell: pwsh
        run: |
          if (Test-Path 'target\release\bundle') {
            Get-ChildItem -Recurse target\release\bundle | Format-Table Length, FullName
          } else {
            Write-Host "target\\release\\bundle does not exist"
          }

      # âœ… Auto-create & publish a Release for tag pushes
      - name: Publish GitHub Release (attach installer)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          prerelease: false
          generate_release_notes: true
          # uses the pushed tag by default
          files: |
            target/release/bundle/nsis/*-setup.exe
            target/release/bundle/nsis/*.nsis.zip

      # (optional) keep artifact for convenience, even on tag builds
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-bundles
          path: |
            target/release/bundle/nsis/*-setup.exe
            target/release/bundle/nsis/*.nsis.zip
          if-no-files-found: warn
